{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","PersonForm","props","persons","newName","newNumber","setPersons","setNewName","setNewNumber","handleNameChange","handleNumberChange","setErrorMessage","errorMessage","onSubmit","event","preventDefault","undefined","find","person","name","personService","number","returnedPerson","concat","setTimeout","console","log","window","confirm","henkilo","filter","personObject","value","onChange","type","Persons","handleClick","includes","map","key","onClick","Filter","handleFilterChange","App","useState","setFilter","useEffect","initialNotes","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99e1b925.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/persons'\r\n//const baseUrl = 'https://infinite-eyrie-85894.herokuapp.com/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n//Olen tehnyt tämän\r\nconst poista = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update,\r\n  poista: poista \r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport personService from './services/persons.js'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  \r\nconst PersonForm = (props) => {\r\n    const {persons, newName, newNumber, \r\n        setPersons, setNewName, setNewNumber,\r\n        handleNameChange, handleNumberChange,\r\n        errorMessage, setErrorMessage} = props\r\n\r\n    //Tämä on tapahtumankäsittelijä ja sen voisi ehkä siirtää Appiin???\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        //Nimi ei ole listassa\r\n        if (persons.find(person => person.name === newName) === undefined) {\r\n            const personObject = {\r\n                //id: persons.length + 1,\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personService\r\n            .create(personObject) //palauttaa lisätyn personin\r\n              .then(returnedPerson => {\r\n              setPersons(persons.concat(returnedPerson))\r\n              setNewName('')\r\n              setNewNumber('')\r\n              //ilmoitus lisäämisestä:\r\n              setErrorMessage('Uusi henkilö lisätty luetteloon!')\r\n              setTimeout(() => {setErrorMessage(null)}, 7000)\r\n            })\r\n            console.log('uusi nimi ja numero lisätty:', newName, newNumber)\r\n        } else {\r\n            if(window.confirm(`Haluatko varmasti korvata numeron?`)) {\r\n            const henkilo = persons.filter(person => person.name === newName)[0]\r\n            const personObject = {\r\n                name: henkilo.name,\r\n                number: newNumber\r\n            }\r\n            personService\r\n            .update(henkilo.id, personObject) //promisen mukana tulee person\r\n            .then(returnedPerson => {\r\n                setPersons(persons.filter(person => person.name !== newName).concat(returnedPerson))\r\n                setNewName('')\r\n                setNewNumber('')\r\n                //ilmoitus numeron päivittämistä\r\n                setErrorMessage('Henkilön puhelinnumero on nyt päivitetty!')\r\n                setTimeout(() => {setErrorMessage(null)}, 7000)\r\n            }) }\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                Nimi: <input value={newName} onChange={handleNameChange}/> \r\n                Numero: <input value={newNumber} onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Lisää</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Persons = (props) => {\r\n    const {persons, filter, handleClick} = props\r\n    const filteredPersons = persons.filter(person => person.name.includes(filter))\r\n    return (\r\n        filteredPersons.map(person => \r\n            <li key={person.id}>\r\n                {person.name} {' '} \r\n                {person.number} {' '}\r\n                <button onClick={handleClick(person)}>Poista</button>\r\n            </li>\r\n        )\r\n    )  \r\n}\r\n\r\nconst Filter = (props) => {\r\n    const {filter, handleFilterChange} = props\r\n    return (\r\n        <div>\r\n            <input value={filter} onChange={handleFilterChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]) \r\n  const [newName, setNewName ] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const haeData = () => {\r\n    console.log('Kutsuttiin useEffect-metodia')\r\n    personService\r\n    .getAll()\r\n      .then(initialNotes => {\r\n      setPersons(initialNotes)\r\n    })\r\n    // axios\r\n    //   .get('http://localhost:3001/persons')\r\n    //   .then(response => {\r\n    //     console.log('promise fulfilled')\r\n    //     console.log('data: ', response.data)\r\n    //     setPersons(response.data)\r\n    //   })\r\n  }\r\n  \r\n  useEffect(haeData, [])\r\n\r\n\r\n    //TAPAHTUMANKÄSITTELIJÄT\r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    console.log(event.target.value)\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleClick = (person) => () => {\r\n    const id = person.id\r\n    if (window.confirm(`Haluatko varmasti poistaa henkilön ${person.name}?`)) {\r\n            const funktio = (response) => {\r\n                setPersons(persons.filter(person => person.id !== id))\r\n            }\r\n            personService\r\n            .poista(id)\r\n            .then(funktio)}\r\n            //poistamisesta ilmottaminen:\r\n            setErrorMessage(`${person.name} on nyt poistettu puhelinluettelosta.`)\r\n            setTimeout(() => {setErrorMessage(null)}, 7000)\r\n        }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Puhelinluettelo</h1>\r\n\r\n      <Notification message={errorMessage}/>\r\n\r\n      <h2>Rajaa hakutuloksia</h2>\r\n      <Filter filter={filter} handleFilterChange={handleFilterChange}/>\r\n\r\n      <h2>Lisää uusi yhteystieto</h2>\r\n      <PersonForm persons={persons} newName={newName} newNumber={newNumber} \r\n                setPersons={setPersons} setNewName={setNewName} setNewNumber={setNewNumber}\r\n                handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\r\n                errorMessage={errorMessage} setErrorMessage={setErrorMessage}/>\r\n   \r\n      <h2>Numerot</h2>\r\n      <Persons persons={persons} filter={filter} handleClick={handleClick}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}